(function(root,factory){if(typeof module==="object"&&module.exports){module.exports=factory()}else if(typeof define==="function"&&define.amd){define([],factory)}else{this.PointerTracker=this.PointerTracker||{};this.PointerTracker.utils=factory()}})(this,function(){"use strict";var undefined,eventsMap={click:"touchstart",mousedown:"touchstart",mousemove:"touchmove",mouseup:"touchend"};function normalizeEvent(e){e=e||event;if(!e.preventDefault)e.preventDefault=function(){this.returnValue=false};if(!e.stopPropagation)e.stopPropagation=function(){this.cancelBubble=true};return e}var addEvent=function(){if(document.addEventListener){return function F(elem,type,callback){if(!elem){return}elem=typeof elem==="string"?$(elem):elem;callback=touchEventHandler(callback,type,elem);if(eventsMap[type])elem.addEventListener(eventsMap[type],callback,true);elem.addEventListener(type,callback,true)}}else{return function F(elem,type,callback){if(!elem)return;elem=typeof elem==="string"?$(elem):elem;elem.attachEvent("on"+type,function(e){e=normalizeEvent(e);return callback.call(e.target||e.srcElement,e)})}}}();var alreadyHandledByTouchEvent;function touchEventHandler(callback,type,elem){var touchevent=eventsMap[type];if(!touchevent)return callback;return function(event){var isTouchEvent=event.type===touchevent;if(alreadyHandledByTouchEvent&&!isTouchEvent){return alreadyHandledByTouchEvent=false}alreadyHandledByTouchEvent=isTouchEvent;return callback.call(this,event)}}function getRaf(){return window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.oRequestAnimationFrame||window.msRequestAnimationFrame||function(callback,rate){window.setTimeout(callback,rate||1e3/60)}}return{on:addEvent,getRaf:getRaf}});(function(root,factory){if(typeof module==="object"&&module.exports){module.exports=factory()}else if(typeof define==="function"&&define.amd){define([],factory)}else{this.PointerTracker=this.PointerTracker||{};this.PointerTracker.EventEmitter=factory()}})(this,function(){"use strict";var hasOwnProperty={}.hasOwnProperty,slice=[].slice;function EventEmitter(){}EventEmitter.mixin=function(obj){var proto=EventEmitter.prototype;for(var attr in EventEmitter.prototype){if(hasOwnProperty.call(proto,attr)){obj[attr]=proto[attr]}}};EventEmitter.prototype={on:function(eventType,listener){this._events=this._events||{};this._events[eventType]=this._events[eventType]||[];this._events[eventType].push(listener)},once:function(eventType,listener){var self=this;function wrap(){listener.apply(null,arguments);self.off(eventType,listener)}wrap.fn=listener;return this.on(eventType,listener)},off:function(eventType,listener){this._events=this._events||{};if(!listener){delete this._events[eventType];return}else if(!this._events[eventType]){return}var listeners=this._events[eventType],i,l;for(i=0,l=listeners.length;i<l;i++){if(listener===listeners[i]||listener===listeners[i].fn){return!!listeners.splice(i,1)}}},emit:function(eventType){if(!this._events||!this._events[eventType]){return}var listeners=this._events[eventType],args=slice.call(arguments,1),i,l;for(i=0,l=listeners.length;i<l;i++){listeners[i].apply(null,args)}}};return EventEmitter});(function(root,factory){if(typeof module==="object"&&module.exports){module.exports=factory(require("./utils",require("./eventEmmiter")))}else if(typeof define==="function"&&define.amd){define(["./utils","./eventEmitter"],factory)}else{var utils=this.PointerTracker.utils,EventEmitter=this.PointerTracker.EventEmitter;root.MobileKeyboardEvents=factory(utils,EventEmitter);delete this.PointerTracker}})(this,function($,EventEmitter){var requestAnimationFrame=$.getRaf(),currentTicket=0,lastInputLength=0,isTracking,hash="   "+(new Date).getTime(),uuid=0,instances={};function MobileKeyboardEvents(element){if(element[hash]){return instances[element[hash]]}var self=this;element[hash]=++uuid;instances[uuid]=this;var input=this.input=document.createElement("textarea");this.input.onfocus=function(){if(!isTracking)this.blur()};this.input.onblur=function(){stopTracker(self)};element.appendChild(input);applyStyle(input,{position:"absolute",top:0,left:0,width:"100%",height:"100%",opacity:0,zIndex:500,outline:"none",cursor:"default"})}function applyStyle(elem,style){for(var attr in style)if(style.hasOwnProperty(attr))elem.style[attr]=style[attr]}EventEmitter.mixin(MobileKeyboardEvents.prototype);MobileKeyboardEvents.prototype.open=function(text){this._text=text||"";trackKeyEvents(this);this.input.focus();moveCursorToEnd(this.input)};MobileKeyboardEvents.prototype.close=function(){this.input.blur();stopTracker(this)};MobileKeyboardEvents.prototype.isOpen=function(){return!!isTracking};MobileKeyboardEvents.prototype.setText=function(text){this.input.value=text;this.lastString=text;moveCursorToEnd(this.input)};function trackKeyEvents(self){var thisTicket=++currentTicket,event={};isTracking=true;var input=self.input;input.value=self._text;lastInputLength=self._text.length;self.lastString=input.value;requestAnimationFrame(function F(){self.currentString=input.value;if(self.lastString!==self.currentString){var currentString=self.currentString;var currentLength=game.$.stringLength(currentString);setDefaultEventValues(event);event.BACKSPACE=currentLength<game.$.stringLength(self.lastString);event.string=currentString;event.char=currentString.charAt(currentLength-1);self.lastString=currentString;self.emit("key",event)}if(thisTicket===currentTicket)requestAnimationFrame(F)})}function moveCursorToEnd(el){if(typeof el.selectionStart=="number"){el.selectionStart=el.selectionEnd=game.$.stringLength(el.value)}else if(typeof el.createTextRange!="undefined"){el.focus();var range=el.createTextRange();range.collapse(false);range.select()}}function setDefaultEventValues(event){event.char=null;event.string="";event.deleted="";event.BACKSPACE=false}function stopTracker(self){isTracking=false;currentTicket++;self.emit("close")}return MobileKeyboardEvents});