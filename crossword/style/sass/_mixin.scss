@mixin prefix($property, $value, $prefixes: webkit moz ms o spec) {
    @each $p in $prefixes {
        @if $p == spec {
            #{$property}: $value;
        }
        @else {
        -#{$p}-#{$property}: $value;
        }
    }
}

@mixin border-radius($radius) {
    @include prefix(border-radius, $radius, webkit moz spec);
}

@mixin box-shadow($shadow) {
    @include prefix(box-shadow, $shadow, webkit moz spec);
}

@mixin transition($transition) {
    @include prefix(transition, $transition, webkit moz o spec);
}

@mixin inline-block() {
    display: inline-block;
    *display: inline;
    *zoom: 1;
}

@mixin opacity($opacity) {
    opacity: $opacity;
    filter: alpha(opacity=$opacity*100);
}

@mixin transform($transform) {
    @include prefix(transform, $transform);
}

@mixin perspective($value) {
    @include prefix(perspective, $value, webkit moz spec);
}

// see: http://codeboxers.com/straight-sass-gradient-mixin/
@mixin linear-gradient($fromColor, $toColor) {
  background-color: $toColor; /* Fallback Color */
  background-image: -webkit-gradient(linear, left top, left bottom, from($fromColor), to($toColor)); /* Saf4+, Chrome */
  background-image: -webkit-linear-gradient(top, $fromColor, $toColor); /* Chrome 10+, Saf5.1+, iOS 5+ */
  background-image:    -moz-linear-gradient(top, $fromColor, $toColor); /* FF3.6 */
  background-image:     -ms-linear-gradient(top, $fromColor, $toColor); /* IE10 */
  background-image:      -o-linear-gradient(top, $fromColor, $toColor); /* Opera 11.10+ */
  background-image:         linear-gradient(top, $fromColor, $toColor);
  filter: progid:DXImageTransform.Microsoft.gradient(GradientType=0,StartColorStr='#{$fromColor}', EndColorStr='#{$toColor}');
}